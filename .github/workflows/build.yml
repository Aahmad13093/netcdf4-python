name: Build and Test Linux
on: [push, pull_request]
jobs:
  build-linux:
    name: Python (${{ matrix.python-version }})
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:

    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Ubuntu Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libnetcdf-pnetcdf

    - name: Update Pip
      run: |
        python -m pip install --upgrade pip

    - name: Install python dependencies via pip
      run: |
        python -m pip install numpy
        python -m pip install cython
        python -m pip install cftime
        python -m pip install pytest
        python -m pip install check-manifest
        python -m pip install twine
        python -m pip install wheel
        python -m pip install mpi4py

    - name: Install netcdf4-python
      run: |
        python setup.py install
    - name: Test
      run: |
        # serial
        cd test
        python run_all.py
        # parallel (hdf5 for netcdf4, pnetcdf for netcdf3)
        cd ../examples
        mpirun -np 4 --oversubscribe python mpi_example.py
        if [ $? -ne 0 ] ; then
          echo "hdf5 mpi test failed!"
          exit 1
        else
          echo "hdf5 mpi test passed!"
        fi
        mpirun -np 4 --oversubscribe python mpi_example.py NETCDF3_64BIT_DATA
        if [ $? -ne 0 ] ; then
          echo "pnetcdf mpi test failed!"
          exit 1
        else
          echo "pnetcdf mpi test passed!"
        fi

    - name: Tarball
      run: |
        python setup.py --version ; 
        pip wheel . -w dist --no-deps ;
        check-manifest --verbose ;
        twine check dist/* ;
